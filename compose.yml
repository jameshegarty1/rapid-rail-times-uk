version: '3.7'

services:
  nginx:
    image: nginx:1.17
    volumes:
      - ./frontend/nginx/default.conf.dev:/etc/nginx/conf.d/default.conf
    ports:
      - 8000:8080
    depends_on:
      - backend
      - frontend

  postgres:
    image: postgres:12
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - '5432:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      retries: 5
    volumes:
      - db-data:/var/lib/postgresql/data:cached

  backend:
    build:
      context: backend
      dockerfile: Dockerfile
    tty: true
    volumes:
      - ./backend:/app/:cached
      - ./.docker/.ipython:/root/.ipython:cached
    environment:
      PYTHONPATH: .
      DATABASE_URL: 'postgresql://postgres:postgres@postgres:5432/postgres'
      WSDL: ${WSDL}
      LDB_TOKEN: ${LDB_TOKEN}
    depends_on:
      - "postgres"

  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile.dev
    stdin_open: true
    volumes:
      - './frontend:/app:cached'
      - './frontend/node_modules:/app/node_modules:cached'
    environment:
      - NODE_ENV=development 
      - REACT_APP_API_URL=${REACT_APP_API_URL}


volumes:
  db-data:
