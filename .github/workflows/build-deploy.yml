name: Build and Deploy

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g. 0.1.6)'
        required: true
        type: string

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USER }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_PAT }}
  GCP_PROJECT_ID: rail-times-uk
  GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
  LDB_TOKEN: ${{ secrets.LDB_TOKEN }}
  WSDL: ${{ secrets.WSDL }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}
      
      - name: Set version
        run: echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
      
      - name: Build and push backend
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          platforms: linux/amd64
          tags: ${{ env.DOCKERHUB_USERNAME }}/${{ secrets.BACKEND_REPO_NAME }}:v${{ env.VERSION }}
          build-args: |
            LDB_TOKEN=${{ env.LDB_TOKEN }}
            WSDL=${{ secrets.WSDL }}
          
      - name: Build and push frontend
        if: github.event_name == 'push' && contains(github.event.commits[0].modified, 'frontend/')
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: true
          platforms: linux/amd64
          tags: ${{ env.DOCKERHUB_USERNAME }}/${{ secrets.FRONTEND_REPO_NAME }}:v${{ env.VERSION }}
          build-args: |
            REACT_APP_API_URL=${{ secrets.REACT_APP_API_URL }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        
      - name: Auth to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ env.GCP_SA_KEY }}
          
      - name: Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}
          
      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Create tfvars file
        working-directory: ./terraform
        run: |
          cat > terraform.tfvars << EOF
          project_id = "rail-times-uk"
          region = "europe-west1"
          backend_service_name = "rtuk-backend"
          frontend_service_name = "rtuk-frontend"
          backend_image_url = "docker.io/${{ env.DOCKERHUB_USERNAME }}/${{ secrets.BACKEND_REPO_NAME }}:v${{ env.VERSION }}"
          frontend_image_url = "docker.io/${{ env.DOCKERHUB_USERNAME }}/${{ secrets.FRONTEND_REPO_NAME }}:v${{ env.VERSION }}"
          frontend_url = "${{ secrets.FRONTEND_URL }}"
          backend_url = "${{ secrets.BACKEND_URL }}"
          api_key = "${{ secrets.API_KEY }}"
          domain = "rail-times-uk.com"
          frontend_domain = "www"
          db_password = "${{ secrets.DB_PASSWORD }}"
          google_service_account = "${{ secrets.GOOGLE_SERVICE_ACCOUNT }}"
          EOF
        
      - name: Terraform Plan
        working-directory: ./terraform
        run: terraform plan -var-file=terraform.tfvars
        
      - name: Terraform Apply
        working-directory: ./terraform
        if: github.ref == 'refs/heads/master'
        run: terraform apply -var-file=terraform.tfvars -auto-approve
